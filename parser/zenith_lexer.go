// Code generated from ZenithLexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ZenithLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var ZenithLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func zenithlexerLexerInit() {
	staticData := &ZenithLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "':='", "'+'", "'-'", "'*'", "'/'", "'%'", "'if'", "'else'", "'true'",
		"'false'", "", "", "", "'('", "')'", "';'",
	}
	staticData.SymbolicNames = []string{
		"", "DEFINE_EQ", "PLUS", "MINUS", "TIMES", "DIVIDE", "REM", "IF", "ELSE",
		"TRUE", "FALSE", "TYPE", "NUM", "ID", "LPAREN", "RPAREN", "SEMICOLON",
		"NL", "SPACE",
	}
	staticData.RuleNames = []string{
		"DEFINE_EQ", "PLUS", "MINUS", "TIMES", "DIVIDE", "REM", "IF", "ELSE",
		"TRUE", "FALSE", "TYPE", "NUM", "DEC_NUM", "DEC_SEG", "BIN_NUM", "BIN_SEG",
		"OCT_NUM", "OCT_SEG", "HEX_NUM", "HEX_SEG", "HEX_DIGIT", "ID", "LPAREN",
		"RPAREN", "SEMICOLON", "NL", "SPACE",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 18, 324, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1,
		4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1,
		8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 10, 3, 10, 155, 8, 10, 1, 11, 1, 11, 1, 11, 1, 11, 3, 11,
		161, 8, 11, 1, 12, 1, 12, 5, 12, 165, 8, 12, 10, 12, 12, 12, 168, 9, 12,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 5, 12, 175, 8, 12, 10, 12, 12, 12, 178,
		9, 12, 3, 12, 180, 8, 12, 1, 13, 1, 13, 5, 13, 184, 8, 13, 10, 13, 12,
		13, 187, 9, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 5, 14, 194, 8, 14, 10,
		14, 12, 14, 197, 9, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 5, 14, 204,
		8, 14, 10, 14, 12, 14, 207, 9, 14, 3, 14, 209, 8, 14, 1, 15, 5, 15, 212,
		8, 15, 10, 15, 12, 15, 215, 9, 15, 1, 15, 1, 15, 5, 15, 219, 8, 15, 10,
		15, 12, 15, 222, 9, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 5, 16, 229,
		8, 16, 10, 16, 12, 16, 232, 9, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 5,
		16, 239, 8, 16, 10, 16, 12, 16, 242, 9, 16, 3, 16, 244, 8, 16, 1, 17, 5,
		17, 247, 8, 17, 10, 17, 12, 17, 250, 9, 17, 1, 17, 1, 17, 5, 17, 254, 8,
		17, 10, 17, 12, 17, 257, 9, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18,
		5, 18, 265, 8, 18, 10, 18, 12, 18, 268, 9, 18, 1, 18, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 18, 5, 18, 276, 8, 18, 10, 18, 12, 18, 279, 9, 18, 3, 18,
		281, 8, 18, 1, 19, 1, 19, 5, 19, 285, 8, 19, 10, 19, 12, 19, 288, 9, 19,
		1, 19, 1, 19, 1, 19, 5, 19, 293, 8, 19, 10, 19, 12, 19, 296, 9, 19, 1,
		20, 1, 20, 1, 21, 1, 21, 5, 21, 302, 8, 21, 10, 21, 12, 21, 305, 9, 21,
		1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 3, 25, 314, 8, 25, 1,
		25, 4, 25, 317, 8, 25, 11, 25, 12, 25, 318, 1, 26, 1, 26, 1, 26, 1, 26,
		0, 0, 27, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19,
		10, 21, 11, 23, 12, 25, 0, 27, 0, 29, 0, 31, 0, 33, 0, 35, 0, 37, 0, 39,
		0, 41, 0, 43, 13, 45, 14, 47, 15, 49, 16, 51, 17, 53, 18, 1, 0, 12, 2,
		0, 48, 57, 95, 95, 1, 0, 48, 57, 2, 0, 48, 49, 95, 95, 1, 0, 48, 49, 2,
		0, 48, 55, 95, 95, 1, 0, 48, 55, 3, 0, 48, 57, 65, 70, 97, 102, 3, 0, 65,
		90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 1, 0, 13, 13,
		1, 0, 10, 10, 2, 0, 9, 9, 32, 32, 359, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0,
		0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0,
		0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0,
		0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1,
		0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53,
		1, 0, 0, 0, 1, 55, 1, 0, 0, 0, 3, 58, 1, 0, 0, 0, 5, 60, 1, 0, 0, 0, 7,
		62, 1, 0, 0, 0, 9, 64, 1, 0, 0, 0, 11, 66, 1, 0, 0, 0, 13, 68, 1, 0, 0,
		0, 15, 71, 1, 0, 0, 0, 17, 76, 1, 0, 0, 0, 19, 81, 1, 0, 0, 0, 21, 154,
		1, 0, 0, 0, 23, 160, 1, 0, 0, 0, 25, 179, 1, 0, 0, 0, 27, 181, 1, 0, 0,
		0, 29, 188, 1, 0, 0, 0, 31, 213, 1, 0, 0, 0, 33, 223, 1, 0, 0, 0, 35, 248,
		1, 0, 0, 0, 37, 258, 1, 0, 0, 0, 39, 286, 1, 0, 0, 0, 41, 297, 1, 0, 0,
		0, 43, 299, 1, 0, 0, 0, 45, 306, 1, 0, 0, 0, 47, 308, 1, 0, 0, 0, 49, 310,
		1, 0, 0, 0, 51, 316, 1, 0, 0, 0, 53, 320, 1, 0, 0, 0, 55, 56, 5, 58, 0,
		0, 56, 57, 5, 61, 0, 0, 57, 2, 1, 0, 0, 0, 58, 59, 5, 43, 0, 0, 59, 4,
		1, 0, 0, 0, 60, 61, 5, 45, 0, 0, 61, 6, 1, 0, 0, 0, 62, 63, 5, 42, 0, 0,
		63, 8, 1, 0, 0, 0, 64, 65, 5, 47, 0, 0, 65, 10, 1, 0, 0, 0, 66, 67, 5,
		37, 0, 0, 67, 12, 1, 0, 0, 0, 68, 69, 5, 105, 0, 0, 69, 70, 5, 102, 0,
		0, 70, 14, 1, 0, 0, 0, 71, 72, 5, 101, 0, 0, 72, 73, 5, 108, 0, 0, 73,
		74, 5, 115, 0, 0, 74, 75, 5, 101, 0, 0, 75, 16, 1, 0, 0, 0, 76, 77, 5,
		116, 0, 0, 77, 78, 5, 114, 0, 0, 78, 79, 5, 117, 0, 0, 79, 80, 5, 101,
		0, 0, 80, 18, 1, 0, 0, 0, 81, 82, 5, 102, 0, 0, 82, 83, 5, 97, 0, 0, 83,
		84, 5, 108, 0, 0, 84, 85, 5, 115, 0, 0, 85, 86, 5, 101, 0, 0, 86, 20, 1,
		0, 0, 0, 87, 88, 5, 117, 0, 0, 88, 89, 5, 105, 0, 0, 89, 90, 5, 110, 0,
		0, 90, 91, 5, 116, 0, 0, 91, 155, 5, 56, 0, 0, 92, 93, 5, 117, 0, 0, 93,
		94, 5, 105, 0, 0, 94, 95, 5, 110, 0, 0, 95, 96, 5, 116, 0, 0, 96, 97, 5,
		49, 0, 0, 97, 155, 5, 54, 0, 0, 98, 99, 5, 117, 0, 0, 99, 100, 5, 105,
		0, 0, 100, 101, 5, 110, 0, 0, 101, 102, 5, 116, 0, 0, 102, 103, 5, 51,
		0, 0, 103, 155, 5, 50, 0, 0, 104, 105, 5, 117, 0, 0, 105, 106, 5, 105,
		0, 0, 106, 107, 5, 110, 0, 0, 107, 108, 5, 116, 0, 0, 108, 109, 5, 54,
		0, 0, 109, 155, 5, 52, 0, 0, 110, 111, 5, 117, 0, 0, 111, 112, 5, 105,
		0, 0, 112, 113, 5, 110, 0, 0, 113, 155, 5, 116, 0, 0, 114, 115, 5, 105,
		0, 0, 115, 116, 5, 110, 0, 0, 116, 117, 5, 116, 0, 0, 117, 155, 5, 56,
		0, 0, 118, 119, 5, 105, 0, 0, 119, 120, 5, 110, 0, 0, 120, 121, 5, 116,
		0, 0, 121, 122, 5, 49, 0, 0, 122, 155, 5, 54, 0, 0, 123, 124, 5, 105, 0,
		0, 124, 125, 5, 110, 0, 0, 125, 126, 5, 116, 0, 0, 126, 127, 5, 51, 0,
		0, 127, 155, 5, 50, 0, 0, 128, 129, 5, 105, 0, 0, 129, 130, 5, 110, 0,
		0, 130, 131, 5, 116, 0, 0, 131, 132, 5, 54, 0, 0, 132, 155, 5, 52, 0, 0,
		133, 134, 5, 105, 0, 0, 134, 135, 5, 110, 0, 0, 135, 155, 5, 116, 0, 0,
		136, 137, 5, 102, 0, 0, 137, 138, 5, 108, 0, 0, 138, 139, 5, 111, 0, 0,
		139, 140, 5, 97, 0, 0, 140, 141, 5, 116, 0, 0, 141, 142, 5, 51, 0, 0, 142,
		155, 5, 50, 0, 0, 143, 144, 5, 102, 0, 0, 144, 145, 5, 108, 0, 0, 145,
		146, 5, 111, 0, 0, 146, 147, 5, 97, 0, 0, 147, 148, 5, 116, 0, 0, 148,
		149, 5, 54, 0, 0, 149, 155, 5, 52, 0, 0, 150, 151, 5, 98, 0, 0, 151, 152,
		5, 111, 0, 0, 152, 153, 5, 111, 0, 0, 153, 155, 5, 108, 0, 0, 154, 87,
		1, 0, 0, 0, 154, 92, 1, 0, 0, 0, 154, 98, 1, 0, 0, 0, 154, 104, 1, 0, 0,
		0, 154, 110, 1, 0, 0, 0, 154, 114, 1, 0, 0, 0, 154, 118, 1, 0, 0, 0, 154,
		123, 1, 0, 0, 0, 154, 128, 1, 0, 0, 0, 154, 133, 1, 0, 0, 0, 154, 136,
		1, 0, 0, 0, 154, 143, 1, 0, 0, 0, 154, 150, 1, 0, 0, 0, 155, 22, 1, 0,
		0, 0, 156, 161, 3, 25, 12, 0, 157, 161, 3, 29, 14, 0, 158, 161, 3, 33,
		16, 0, 159, 161, 3, 37, 18, 0, 160, 156, 1, 0, 0, 0, 160, 157, 1, 0, 0,
		0, 160, 158, 1, 0, 0, 0, 160, 159, 1, 0, 0, 0, 161, 24, 1, 0, 0, 0, 162,
		180, 3, 27, 13, 0, 163, 165, 7, 0, 0, 0, 164, 163, 1, 0, 0, 0, 165, 168,
		1, 0, 0, 0, 166, 164, 1, 0, 0, 0, 166, 167, 1, 0, 0, 0, 167, 169, 1, 0,
		0, 0, 168, 166, 1, 0, 0, 0, 169, 170, 5, 46, 0, 0, 170, 180, 3, 27, 13,
		0, 171, 172, 3, 27, 13, 0, 172, 176, 5, 46, 0, 0, 173, 175, 7, 0, 0, 0,
		174, 173, 1, 0, 0, 0, 175, 178, 1, 0, 0, 0, 176, 174, 1, 0, 0, 0, 176,
		177, 1, 0, 0, 0, 177, 180, 1, 0, 0, 0, 178, 176, 1, 0, 0, 0, 179, 162,
		1, 0, 0, 0, 179, 166, 1, 0, 0, 0, 179, 171, 1, 0, 0, 0, 180, 26, 1, 0,
		0, 0, 181, 185, 7, 1, 0, 0, 182, 184, 7, 0, 0, 0, 183, 182, 1, 0, 0, 0,
		184, 187, 1, 0, 0, 0, 185, 183, 1, 0, 0, 0, 185, 186, 1, 0, 0, 0, 186,
		28, 1, 0, 0, 0, 187, 185, 1, 0, 0, 0, 188, 189, 5, 48, 0, 0, 189, 190,
		5, 98, 0, 0, 190, 208, 1, 0, 0, 0, 191, 209, 3, 31, 15, 0, 192, 194, 7,
		2, 0, 0, 193, 192, 1, 0, 0, 0, 194, 197, 1, 0, 0, 0, 195, 193, 1, 0, 0,
		0, 195, 196, 1, 0, 0, 0, 196, 198, 1, 0, 0, 0, 197, 195, 1, 0, 0, 0, 198,
		199, 5, 46, 0, 0, 199, 209, 3, 31, 15, 0, 200, 201, 3, 31, 15, 0, 201,
		205, 5, 46, 0, 0, 202, 204, 7, 2, 0, 0, 203, 202, 1, 0, 0, 0, 204, 207,
		1, 0, 0, 0, 205, 203, 1, 0, 0, 0, 205, 206, 1, 0, 0, 0, 206, 209, 1, 0,
		0, 0, 207, 205, 1, 0, 0, 0, 208, 191, 1, 0, 0, 0, 208, 195, 1, 0, 0, 0,
		208, 200, 1, 0, 0, 0, 209, 30, 1, 0, 0, 0, 210, 212, 7, 2, 0, 0, 211, 210,
		1, 0, 0, 0, 212, 215, 1, 0, 0, 0, 213, 211, 1, 0, 0, 0, 213, 214, 1, 0,
		0, 0, 214, 216, 1, 0, 0, 0, 215, 213, 1, 0, 0, 0, 216, 220, 7, 3, 0, 0,
		217, 219, 7, 2, 0, 0, 218, 217, 1, 0, 0, 0, 219, 222, 1, 0, 0, 0, 220,
		218, 1, 0, 0, 0, 220, 221, 1, 0, 0, 0, 221, 32, 1, 0, 0, 0, 222, 220, 1,
		0, 0, 0, 223, 224, 5, 48, 0, 0, 224, 225, 5, 111, 0, 0, 225, 243, 1, 0,
		0, 0, 226, 244, 3, 35, 17, 0, 227, 229, 7, 4, 0, 0, 228, 227, 1, 0, 0,
		0, 229, 232, 1, 0, 0, 0, 230, 228, 1, 0, 0, 0, 230, 231, 1, 0, 0, 0, 231,
		233, 1, 0, 0, 0, 232, 230, 1, 0, 0, 0, 233, 234, 5, 46, 0, 0, 234, 244,
		3, 35, 17, 0, 235, 236, 3, 35, 17, 0, 236, 240, 5, 46, 0, 0, 237, 239,
		7, 4, 0, 0, 238, 237, 1, 0, 0, 0, 239, 242, 1, 0, 0, 0, 240, 238, 1, 0,
		0, 0, 240, 241, 1, 0, 0, 0, 241, 244, 1, 0, 0, 0, 242, 240, 1, 0, 0, 0,
		243, 226, 1, 0, 0, 0, 243, 230, 1, 0, 0, 0, 243, 235, 1, 0, 0, 0, 244,
		34, 1, 0, 0, 0, 245, 247, 7, 4, 0, 0, 246, 245, 1, 0, 0, 0, 247, 250, 1,
		0, 0, 0, 248, 246, 1, 0, 0, 0, 248, 249, 1, 0, 0, 0, 249, 251, 1, 0, 0,
		0, 250, 248, 1, 0, 0, 0, 251, 255, 7, 5, 0, 0, 252, 254, 7, 4, 0, 0, 253,
		252, 1, 0, 0, 0, 254, 257, 1, 0, 0, 0, 255, 253, 1, 0, 0, 0, 255, 256,
		1, 0, 0, 0, 256, 36, 1, 0, 0, 0, 257, 255, 1, 0, 0, 0, 258, 259, 5, 48,
		0, 0, 259, 260, 5, 120, 0, 0, 260, 280, 1, 0, 0, 0, 261, 281, 3, 39, 19,
		0, 262, 265, 3, 41, 20, 0, 263, 265, 5, 95, 0, 0, 264, 262, 1, 0, 0, 0,
		264, 263, 1, 0, 0, 0, 265, 268, 1, 0, 0, 0, 266, 264, 1, 0, 0, 0, 266,
		267, 1, 0, 0, 0, 267, 269, 1, 0, 0, 0, 268, 266, 1, 0, 0, 0, 269, 270,
		5, 46, 0, 0, 270, 281, 3, 39, 19, 0, 271, 272, 3, 39, 19, 0, 272, 277,
		5, 46, 0, 0, 273, 276, 3, 41, 20, 0, 274, 276, 5, 95, 0, 0, 275, 273, 1,
		0, 0, 0, 275, 274, 1, 0, 0, 0, 276, 279, 1, 0, 0, 0, 277, 275, 1, 0, 0,
		0, 277, 278, 1, 0, 0, 0, 278, 281, 1, 0, 0, 0, 279, 277, 1, 0, 0, 0, 280,
		261, 1, 0, 0, 0, 280, 266, 1, 0, 0, 0, 280, 271, 1, 0, 0, 0, 281, 38, 1,
		0, 0, 0, 282, 285, 3, 41, 20, 0, 283, 285, 5, 95, 0, 0, 284, 282, 1, 0,
		0, 0, 284, 283, 1, 0, 0, 0, 285, 288, 1, 0, 0, 0, 286, 284, 1, 0, 0, 0,
		286, 287, 1, 0, 0, 0, 287, 289, 1, 0, 0, 0, 288, 286, 1, 0, 0, 0, 289,
		294, 3, 41, 20, 0, 290, 293, 3, 41, 20, 0, 291, 293, 5, 95, 0, 0, 292,
		290, 1, 0, 0, 0, 292, 291, 1, 0, 0, 0, 293, 296, 1, 0, 0, 0, 294, 292,
		1, 0, 0, 0, 294, 295, 1, 0, 0, 0, 295, 40, 1, 0, 0, 0, 296, 294, 1, 0,
		0, 0, 297, 298, 7, 6, 0, 0, 298, 42, 1, 0, 0, 0, 299, 303, 7, 7, 0, 0,
		300, 302, 7, 8, 0, 0, 301, 300, 1, 0, 0, 0, 302, 305, 1, 0, 0, 0, 303,
		301, 1, 0, 0, 0, 303, 304, 1, 0, 0, 0, 304, 44, 1, 0, 0, 0, 305, 303, 1,
		0, 0, 0, 306, 307, 5, 40, 0, 0, 307, 46, 1, 0, 0, 0, 308, 309, 5, 41, 0,
		0, 309, 48, 1, 0, 0, 0, 310, 311, 5, 59, 0, 0, 311, 50, 1, 0, 0, 0, 312,
		314, 7, 9, 0, 0, 313, 312, 1, 0, 0, 0, 313, 314, 1, 0, 0, 0, 314, 315,
		1, 0, 0, 0, 315, 317, 7, 10, 0, 0, 316, 313, 1, 0, 0, 0, 317, 318, 1, 0,
		0, 0, 318, 316, 1, 0, 0, 0, 318, 319, 1, 0, 0, 0, 319, 52, 1, 0, 0, 0,
		320, 321, 7, 11, 0, 0, 321, 322, 1, 0, 0, 0, 322, 323, 6, 26, 0, 0, 323,
		54, 1, 0, 0, 0, 29, 0, 154, 160, 166, 176, 179, 185, 195, 205, 208, 213,
		220, 230, 240, 243, 248, 255, 264, 266, 275, 277, 280, 284, 286, 292, 294,
		303, 313, 318, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ZenithLexerInit initializes any static state used to implement ZenithLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewZenithLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ZenithLexerInit() {
	staticData := &ZenithLexerLexerStaticData
	staticData.once.Do(zenithlexerLexerInit)
}

// NewZenithLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewZenithLexer(input antlr.CharStream) *ZenithLexer {
	ZenithLexerInit()
	l := new(ZenithLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &ZenithLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ZenithLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ZenithLexer tokens.
const (
	ZenithLexerDEFINE_EQ = 1
	ZenithLexerPLUS      = 2
	ZenithLexerMINUS     = 3
	ZenithLexerTIMES     = 4
	ZenithLexerDIVIDE    = 5
	ZenithLexerREM       = 6
	ZenithLexerIF        = 7
	ZenithLexerELSE      = 8
	ZenithLexerTRUE      = 9
	ZenithLexerFALSE     = 10
	ZenithLexerTYPE      = 11
	ZenithLexerNUM       = 12
	ZenithLexerID        = 13
	ZenithLexerLPAREN    = 14
	ZenithLexerRPAREN    = 15
	ZenithLexerSEMICOLON = 16
	ZenithLexerNL        = 17
	ZenithLexerSPACE     = 18
)
