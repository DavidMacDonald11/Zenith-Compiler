// Code generated from ZenithLexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ZenithLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var ZenithLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func zenithlexerLexerInit() {
	staticData := &ZenithLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'$'", "'&'", "'@'", "'~'", "'!'", "'+'", "'-'", "'*'", "'/'", "'%'",
		"'if'", "'else'", "'true'", "'false'", "'null'", "'='", "':='", "",
		"", "", "'('", "')'", "'{'", "'}'", "';'",
	}
	staticData.SymbolicNames = []string{
		"", "OWN_PTR", "PTR", "AT", "BIT_NOT", "NOT", "PLUS", "MINUS", "TIMES",
		"DIVIDE", "REM", "IF", "ELSE", "TRUE", "FALSE", "NULL", "ASSIGN", "INIT_ASSIGN",
		"TYPE", "NUM", "ID", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "SEMICOLON",
		"NL", "IGNORED",
	}
	staticData.RuleNames = []string{
		"OWN_PTR", "PTR", "AT", "BIT_NOT", "NOT", "PLUS", "MINUS", "TIMES",
		"DIVIDE", "REM", "IF", "ELSE", "TRUE", "FALSE", "NULL", "ASSIGN", "INIT_ASSIGN",
		"TYPE", "NUM", "DEC_NUM", "DEC_SEG", "BIN_NUM", "BIN_SEG", "OCT_NUM",
		"OCT_SEG", "HEX_NUM", "HEX_SEG", "HEX_DIGIT", "ID", "LPAREN", "RPAREN",
		"LBRACE", "RBRACE", "SEMICOLON", "NL", "IGNORED",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 27, 384, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 1, 0,
		1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6,
		1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1,
		11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13,
		1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1,
		15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1,
		17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1,
		17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1,
		17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 3, 17, 190, 8, 17,
		1, 18, 1, 18, 1, 18, 1, 18, 3, 18, 196, 8, 18, 1, 19, 1, 19, 5, 19, 200,
		8, 19, 10, 19, 12, 19, 203, 9, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 5,
		19, 210, 8, 19, 10, 19, 12, 19, 213, 9, 19, 3, 19, 215, 8, 19, 1, 20, 1,
		20, 5, 20, 219, 8, 20, 10, 20, 12, 20, 222, 9, 20, 1, 21, 1, 21, 1, 21,
		1, 21, 1, 21, 5, 21, 229, 8, 21, 10, 21, 12, 21, 232, 9, 21, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 21, 5, 21, 239, 8, 21, 10, 21, 12, 21, 242, 9, 21,
		3, 21, 244, 8, 21, 1, 22, 5, 22, 247, 8, 22, 10, 22, 12, 22, 250, 9, 22,
		1, 22, 1, 22, 5, 22, 254, 8, 22, 10, 22, 12, 22, 257, 9, 22, 1, 23, 1,
		23, 1, 23, 1, 23, 1, 23, 5, 23, 264, 8, 23, 10, 23, 12, 23, 267, 9, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 5, 23, 274, 8, 23, 10, 23, 12, 23, 277,
		9, 23, 3, 23, 279, 8, 23, 1, 24, 5, 24, 282, 8, 24, 10, 24, 12, 24, 285,
		9, 24, 1, 24, 1, 24, 5, 24, 289, 8, 24, 10, 24, 12, 24, 292, 9, 24, 1,
		25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 5, 25, 300, 8, 25, 10, 25, 12, 25,
		303, 9, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 5, 25, 311, 8, 25,
		10, 25, 12, 25, 314, 9, 25, 3, 25, 316, 8, 25, 1, 26, 1, 26, 5, 26, 320,
		8, 26, 10, 26, 12, 26, 323, 9, 26, 1, 26, 1, 26, 1, 26, 5, 26, 328, 8,
		26, 10, 26, 12, 26, 331, 9, 26, 1, 27, 1, 27, 1, 28, 1, 28, 5, 28, 337,
		8, 28, 10, 28, 12, 28, 340, 9, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1,
		31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 3, 34, 353, 8, 34, 1, 34, 4, 34,
		356, 8, 34, 11, 34, 12, 34, 357, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 5,
		35, 365, 8, 35, 10, 35, 12, 35, 368, 9, 35, 1, 35, 1, 35, 1, 35, 1, 35,
		1, 35, 1, 35, 5, 35, 376, 8, 35, 10, 35, 12, 35, 379, 9, 35, 3, 35, 381,
		8, 35, 1, 35, 1, 35, 1, 366, 0, 36, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6,
		13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31,
		16, 33, 17, 35, 18, 37, 19, 39, 0, 41, 0, 43, 0, 45, 0, 47, 0, 49, 0, 51,
		0, 53, 0, 55, 0, 57, 20, 59, 21, 61, 22, 63, 23, 65, 24, 67, 25, 69, 26,
		71, 27, 1, 0, 12, 2, 0, 48, 57, 95, 95, 1, 0, 48, 57, 2, 0, 48, 49, 95,
		95, 1, 0, 48, 49, 2, 0, 48, 55, 95, 95, 1, 0, 48, 55, 3, 0, 48, 57, 65,
		70, 97, 102, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95,
		97, 122, 1, 0, 13, 13, 1, 0, 10, 10, 2, 0, 9, 9, 32, 32, 423, 0, 1, 1,
		0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1,
		0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17,
		1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0,
		25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0,
		0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 57, 1, 0, 0,
		0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0,
		0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 1, 73, 1,
		0, 0, 0, 3, 75, 1, 0, 0, 0, 5, 77, 1, 0, 0, 0, 7, 79, 1, 0, 0, 0, 9, 81,
		1, 0, 0, 0, 11, 83, 1, 0, 0, 0, 13, 85, 1, 0, 0, 0, 15, 87, 1, 0, 0, 0,
		17, 89, 1, 0, 0, 0, 19, 91, 1, 0, 0, 0, 21, 93, 1, 0, 0, 0, 23, 96, 1,
		0, 0, 0, 25, 101, 1, 0, 0, 0, 27, 106, 1, 0, 0, 0, 29, 112, 1, 0, 0, 0,
		31, 117, 1, 0, 0, 0, 33, 119, 1, 0, 0, 0, 35, 189, 1, 0, 0, 0, 37, 195,
		1, 0, 0, 0, 39, 214, 1, 0, 0, 0, 41, 216, 1, 0, 0, 0, 43, 223, 1, 0, 0,
		0, 45, 248, 1, 0, 0, 0, 47, 258, 1, 0, 0, 0, 49, 283, 1, 0, 0, 0, 51, 293,
		1, 0, 0, 0, 53, 321, 1, 0, 0, 0, 55, 332, 1, 0, 0, 0, 57, 334, 1, 0, 0,
		0, 59, 341, 1, 0, 0, 0, 61, 343, 1, 0, 0, 0, 63, 345, 1, 0, 0, 0, 65, 347,
		1, 0, 0, 0, 67, 349, 1, 0, 0, 0, 69, 355, 1, 0, 0, 0, 71, 380, 1, 0, 0,
		0, 73, 74, 5, 36, 0, 0, 74, 2, 1, 0, 0, 0, 75, 76, 5, 38, 0, 0, 76, 4,
		1, 0, 0, 0, 77, 78, 5, 64, 0, 0, 78, 6, 1, 0, 0, 0, 79, 80, 5, 126, 0,
		0, 80, 8, 1, 0, 0, 0, 81, 82, 5, 33, 0, 0, 82, 10, 1, 0, 0, 0, 83, 84,
		5, 43, 0, 0, 84, 12, 1, 0, 0, 0, 85, 86, 5, 45, 0, 0, 86, 14, 1, 0, 0,
		0, 87, 88, 5, 42, 0, 0, 88, 16, 1, 0, 0, 0, 89, 90, 5, 47, 0, 0, 90, 18,
		1, 0, 0, 0, 91, 92, 5, 37, 0, 0, 92, 20, 1, 0, 0, 0, 93, 94, 5, 105, 0,
		0, 94, 95, 5, 102, 0, 0, 95, 22, 1, 0, 0, 0, 96, 97, 5, 101, 0, 0, 97,
		98, 5, 108, 0, 0, 98, 99, 5, 115, 0, 0, 99, 100, 5, 101, 0, 0, 100, 24,
		1, 0, 0, 0, 101, 102, 5, 116, 0, 0, 102, 103, 5, 114, 0, 0, 103, 104, 5,
		117, 0, 0, 104, 105, 5, 101, 0, 0, 105, 26, 1, 0, 0, 0, 106, 107, 5, 102,
		0, 0, 107, 108, 5, 97, 0, 0, 108, 109, 5, 108, 0, 0, 109, 110, 5, 115,
		0, 0, 110, 111, 5, 101, 0, 0, 111, 28, 1, 0, 0, 0, 112, 113, 5, 110, 0,
		0, 113, 114, 5, 117, 0, 0, 114, 115, 5, 108, 0, 0, 115, 116, 5, 108, 0,
		0, 116, 30, 1, 0, 0, 0, 117, 118, 5, 61, 0, 0, 118, 32, 1, 0, 0, 0, 119,
		120, 5, 58, 0, 0, 120, 121, 5, 61, 0, 0, 121, 34, 1, 0, 0, 0, 122, 123,
		5, 85, 0, 0, 123, 124, 5, 73, 0, 0, 124, 125, 5, 110, 0, 0, 125, 126, 5,
		116, 0, 0, 126, 190, 5, 56, 0, 0, 127, 128, 5, 85, 0, 0, 128, 129, 5, 73,
		0, 0, 129, 130, 5, 110, 0, 0, 130, 131, 5, 116, 0, 0, 131, 132, 5, 49,
		0, 0, 132, 190, 5, 54, 0, 0, 133, 134, 5, 85, 0, 0, 134, 135, 5, 73, 0,
		0, 135, 136, 5, 110, 0, 0, 136, 137, 5, 116, 0, 0, 137, 138, 5, 51, 0,
		0, 138, 190, 5, 50, 0, 0, 139, 140, 5, 85, 0, 0, 140, 141, 5, 73, 0, 0,
		141, 142, 5, 110, 0, 0, 142, 143, 5, 116, 0, 0, 143, 144, 5, 54, 0, 0,
		144, 190, 5, 52, 0, 0, 145, 146, 5, 85, 0, 0, 146, 147, 5, 73, 0, 0, 147,
		148, 5, 110, 0, 0, 148, 190, 5, 116, 0, 0, 149, 150, 5, 73, 0, 0, 150,
		151, 5, 110, 0, 0, 151, 152, 5, 116, 0, 0, 152, 190, 5, 56, 0, 0, 153,
		154, 5, 73, 0, 0, 154, 155, 5, 110, 0, 0, 155, 156, 5, 116, 0, 0, 156,
		157, 5, 49, 0, 0, 157, 190, 5, 54, 0, 0, 158, 159, 5, 73, 0, 0, 159, 160,
		5, 110, 0, 0, 160, 161, 5, 116, 0, 0, 161, 162, 5, 51, 0, 0, 162, 190,
		5, 50, 0, 0, 163, 164, 5, 73, 0, 0, 164, 165, 5, 110, 0, 0, 165, 166, 5,
		116, 0, 0, 166, 167, 5, 54, 0, 0, 167, 190, 5, 52, 0, 0, 168, 169, 5, 73,
		0, 0, 169, 170, 5, 110, 0, 0, 170, 190, 5, 116, 0, 0, 171, 172, 5, 70,
		0, 0, 172, 173, 5, 108, 0, 0, 173, 174, 5, 111, 0, 0, 174, 175, 5, 97,
		0, 0, 175, 176, 5, 116, 0, 0, 176, 177, 5, 51, 0, 0, 177, 190, 5, 50, 0,
		0, 178, 179, 5, 70, 0, 0, 179, 180, 5, 108, 0, 0, 180, 181, 5, 111, 0,
		0, 181, 182, 5, 97, 0, 0, 182, 183, 5, 116, 0, 0, 183, 184, 5, 54, 0, 0,
		184, 190, 5, 52, 0, 0, 185, 186, 5, 66, 0, 0, 186, 187, 5, 111, 0, 0, 187,
		188, 5, 111, 0, 0, 188, 190, 5, 108, 0, 0, 189, 122, 1, 0, 0, 0, 189, 127,
		1, 0, 0, 0, 189, 133, 1, 0, 0, 0, 189, 139, 1, 0, 0, 0, 189, 145, 1, 0,
		0, 0, 189, 149, 1, 0, 0, 0, 189, 153, 1, 0, 0, 0, 189, 158, 1, 0, 0, 0,
		189, 163, 1, 0, 0, 0, 189, 168, 1, 0, 0, 0, 189, 171, 1, 0, 0, 0, 189,
		178, 1, 0, 0, 0, 189, 185, 1, 0, 0, 0, 190, 36, 1, 0, 0, 0, 191, 196, 3,
		39, 19, 0, 192, 196, 3, 43, 21, 0, 193, 196, 3, 47, 23, 0, 194, 196, 3,
		51, 25, 0, 195, 191, 1, 0, 0, 0, 195, 192, 1, 0, 0, 0, 195, 193, 1, 0,
		0, 0, 195, 194, 1, 0, 0, 0, 196, 38, 1, 0, 0, 0, 197, 215, 3, 41, 20, 0,
		198, 200, 7, 0, 0, 0, 199, 198, 1, 0, 0, 0, 200, 203, 1, 0, 0, 0, 201,
		199, 1, 0, 0, 0, 201, 202, 1, 0, 0, 0, 202, 204, 1, 0, 0, 0, 203, 201,
		1, 0, 0, 0, 204, 205, 5, 46, 0, 0, 205, 215, 3, 41, 20, 0, 206, 207, 3,
		41, 20, 0, 207, 211, 5, 46, 0, 0, 208, 210, 7, 0, 0, 0, 209, 208, 1, 0,
		0, 0, 210, 213, 1, 0, 0, 0, 211, 209, 1, 0, 0, 0, 211, 212, 1, 0, 0, 0,
		212, 215, 1, 0, 0, 0, 213, 211, 1, 0, 0, 0, 214, 197, 1, 0, 0, 0, 214,
		201, 1, 0, 0, 0, 214, 206, 1, 0, 0, 0, 215, 40, 1, 0, 0, 0, 216, 220, 7,
		1, 0, 0, 217, 219, 7, 0, 0, 0, 218, 217, 1, 0, 0, 0, 219, 222, 1, 0, 0,
		0, 220, 218, 1, 0, 0, 0, 220, 221, 1, 0, 0, 0, 221, 42, 1, 0, 0, 0, 222,
		220, 1, 0, 0, 0, 223, 224, 5, 48, 0, 0, 224, 225, 5, 98, 0, 0, 225, 243,
		1, 0, 0, 0, 226, 244, 3, 45, 22, 0, 227, 229, 7, 2, 0, 0, 228, 227, 1,
		0, 0, 0, 229, 232, 1, 0, 0, 0, 230, 228, 1, 0, 0, 0, 230, 231, 1, 0, 0,
		0, 231, 233, 1, 0, 0, 0, 232, 230, 1, 0, 0, 0, 233, 234, 5, 46, 0, 0, 234,
		244, 3, 45, 22, 0, 235, 236, 3, 45, 22, 0, 236, 240, 5, 46, 0, 0, 237,
		239, 7, 2, 0, 0, 238, 237, 1, 0, 0, 0, 239, 242, 1, 0, 0, 0, 240, 238,
		1, 0, 0, 0, 240, 241, 1, 0, 0, 0, 241, 244, 1, 0, 0, 0, 242, 240, 1, 0,
		0, 0, 243, 226, 1, 0, 0, 0, 243, 230, 1, 0, 0, 0, 243, 235, 1, 0, 0, 0,
		244, 44, 1, 0, 0, 0, 245, 247, 7, 2, 0, 0, 246, 245, 1, 0, 0, 0, 247, 250,
		1, 0, 0, 0, 248, 246, 1, 0, 0, 0, 248, 249, 1, 0, 0, 0, 249, 251, 1, 0,
		0, 0, 250, 248, 1, 0, 0, 0, 251, 255, 7, 3, 0, 0, 252, 254, 7, 2, 0, 0,
		253, 252, 1, 0, 0, 0, 254, 257, 1, 0, 0, 0, 255, 253, 1, 0, 0, 0, 255,
		256, 1, 0, 0, 0, 256, 46, 1, 0, 0, 0, 257, 255, 1, 0, 0, 0, 258, 259, 5,
		48, 0, 0, 259, 260, 5, 111, 0, 0, 260, 278, 1, 0, 0, 0, 261, 279, 3, 49,
		24, 0, 262, 264, 7, 4, 0, 0, 263, 262, 1, 0, 0, 0, 264, 267, 1, 0, 0, 0,
		265, 263, 1, 0, 0, 0, 265, 266, 1, 0, 0, 0, 266, 268, 1, 0, 0, 0, 267,
		265, 1, 0, 0, 0, 268, 269, 5, 46, 0, 0, 269, 279, 3, 49, 24, 0, 270, 271,
		3, 49, 24, 0, 271, 275, 5, 46, 0, 0, 272, 274, 7, 4, 0, 0, 273, 272, 1,
		0, 0, 0, 274, 277, 1, 0, 0, 0, 275, 273, 1, 0, 0, 0, 275, 276, 1, 0, 0,
		0, 276, 279, 1, 0, 0, 0, 277, 275, 1, 0, 0, 0, 278, 261, 1, 0, 0, 0, 278,
		265, 1, 0, 0, 0, 278, 270, 1, 0, 0, 0, 279, 48, 1, 0, 0, 0, 280, 282, 7,
		4, 0, 0, 281, 280, 1, 0, 0, 0, 282, 285, 1, 0, 0, 0, 283, 281, 1, 0, 0,
		0, 283, 284, 1, 0, 0, 0, 284, 286, 1, 0, 0, 0, 285, 283, 1, 0, 0, 0, 286,
		290, 7, 5, 0, 0, 287, 289, 7, 4, 0, 0, 288, 287, 1, 0, 0, 0, 289, 292,
		1, 0, 0, 0, 290, 288, 1, 0, 0, 0, 290, 291, 1, 0, 0, 0, 291, 50, 1, 0,
		0, 0, 292, 290, 1, 0, 0, 0, 293, 294, 5, 48, 0, 0, 294, 295, 5, 120, 0,
		0, 295, 315, 1, 0, 0, 0, 296, 316, 3, 53, 26, 0, 297, 300, 3, 55, 27, 0,
		298, 300, 5, 95, 0, 0, 299, 297, 1, 0, 0, 0, 299, 298, 1, 0, 0, 0, 300,
		303, 1, 0, 0, 0, 301, 299, 1, 0, 0, 0, 301, 302, 1, 0, 0, 0, 302, 304,
		1, 0, 0, 0, 303, 301, 1, 0, 0, 0, 304, 305, 5, 46, 0, 0, 305, 316, 3, 53,
		26, 0, 306, 307, 3, 53, 26, 0, 307, 312, 5, 46, 0, 0, 308, 311, 3, 55,
		27, 0, 309, 311, 5, 95, 0, 0, 310, 308, 1, 0, 0, 0, 310, 309, 1, 0, 0,
		0, 311, 314, 1, 0, 0, 0, 312, 310, 1, 0, 0, 0, 312, 313, 1, 0, 0, 0, 313,
		316, 1, 0, 0, 0, 314, 312, 1, 0, 0, 0, 315, 296, 1, 0, 0, 0, 315, 301,
		1, 0, 0, 0, 315, 306, 1, 0, 0, 0, 316, 52, 1, 0, 0, 0, 317, 320, 3, 55,
		27, 0, 318, 320, 5, 95, 0, 0, 319, 317, 1, 0, 0, 0, 319, 318, 1, 0, 0,
		0, 320, 323, 1, 0, 0, 0, 321, 319, 1, 0, 0, 0, 321, 322, 1, 0, 0, 0, 322,
		324, 1, 0, 0, 0, 323, 321, 1, 0, 0, 0, 324, 329, 3, 55, 27, 0, 325, 328,
		3, 55, 27, 0, 326, 328, 5, 95, 0, 0, 327, 325, 1, 0, 0, 0, 327, 326, 1,
		0, 0, 0, 328, 331, 1, 0, 0, 0, 329, 327, 1, 0, 0, 0, 329, 330, 1, 0, 0,
		0, 330, 54, 1, 0, 0, 0, 331, 329, 1, 0, 0, 0, 332, 333, 7, 6, 0, 0, 333,
		56, 1, 0, 0, 0, 334, 338, 7, 7, 0, 0, 335, 337, 7, 8, 0, 0, 336, 335, 1,
		0, 0, 0, 337, 340, 1, 0, 0, 0, 338, 336, 1, 0, 0, 0, 338, 339, 1, 0, 0,
		0, 339, 58, 1, 0, 0, 0, 340, 338, 1, 0, 0, 0, 341, 342, 5, 40, 0, 0, 342,
		60, 1, 0, 0, 0, 343, 344, 5, 41, 0, 0, 344, 62, 1, 0, 0, 0, 345, 346, 5,
		123, 0, 0, 346, 64, 1, 0, 0, 0, 347, 348, 5, 125, 0, 0, 348, 66, 1, 0,
		0, 0, 349, 350, 5, 59, 0, 0, 350, 68, 1, 0, 0, 0, 351, 353, 7, 9, 0, 0,
		352, 351, 1, 0, 0, 0, 352, 353, 1, 0, 0, 0, 353, 354, 1, 0, 0, 0, 354,
		356, 7, 10, 0, 0, 355, 352, 1, 0, 0, 0, 356, 357, 1, 0, 0, 0, 357, 355,
		1, 0, 0, 0, 357, 358, 1, 0, 0, 0, 358, 70, 1, 0, 0, 0, 359, 381, 7, 11,
		0, 0, 360, 361, 5, 47, 0, 0, 361, 362, 5, 42, 0, 0, 362, 366, 1, 0, 0,
		0, 363, 365, 9, 0, 0, 0, 364, 363, 1, 0, 0, 0, 365, 368, 1, 0, 0, 0, 366,
		367, 1, 0, 0, 0, 366, 364, 1, 0, 0, 0, 367, 369, 1, 0, 0, 0, 368, 366,
		1, 0, 0, 0, 369, 370, 5, 42, 0, 0, 370, 381, 5, 47, 0, 0, 371, 372, 5,
		47, 0, 0, 372, 373, 5, 47, 0, 0, 373, 377, 1, 0, 0, 0, 374, 376, 8, 10,
		0, 0, 375, 374, 1, 0, 0, 0, 376, 379, 1, 0, 0, 0, 377, 375, 1, 0, 0, 0,
		377, 378, 1, 0, 0, 0, 378, 381, 1, 0, 0, 0, 379, 377, 1, 0, 0, 0, 380,
		359, 1, 0, 0, 0, 380, 360, 1, 0, 0, 0, 380, 371, 1, 0, 0, 0, 381, 382,
		1, 0, 0, 0, 382, 383, 6, 35, 0, 0, 383, 72, 1, 0, 0, 0, 32, 0, 189, 195,
		201, 211, 214, 220, 230, 240, 243, 248, 255, 265, 275, 278, 283, 290, 299,
		301, 310, 312, 315, 319, 321, 327, 329, 338, 352, 357, 366, 377, 380, 1,
		6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ZenithLexerInit initializes any static state used to implement ZenithLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewZenithLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ZenithLexerInit() {
	staticData := &ZenithLexerLexerStaticData
	staticData.once.Do(zenithlexerLexerInit)
}

// NewZenithLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewZenithLexer(input antlr.CharStream) *ZenithLexer {
	ZenithLexerInit()
	l := new(ZenithLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &ZenithLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ZenithLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ZenithLexer tokens.
const (
	ZenithLexerOWN_PTR     = 1
	ZenithLexerPTR         = 2
	ZenithLexerAT          = 3
	ZenithLexerBIT_NOT     = 4
	ZenithLexerNOT         = 5
	ZenithLexerPLUS        = 6
	ZenithLexerMINUS       = 7
	ZenithLexerTIMES       = 8
	ZenithLexerDIVIDE      = 9
	ZenithLexerREM         = 10
	ZenithLexerIF          = 11
	ZenithLexerELSE        = 12
	ZenithLexerTRUE        = 13
	ZenithLexerFALSE       = 14
	ZenithLexerNULL        = 15
	ZenithLexerASSIGN      = 16
	ZenithLexerINIT_ASSIGN = 17
	ZenithLexerTYPE        = 18
	ZenithLexerNUM         = 19
	ZenithLexerID          = 20
	ZenithLexerLPAREN      = 21
	ZenithLexerRPAREN      = 22
	ZenithLexerLBRACE      = 23
	ZenithLexerRBRACE      = 24
	ZenithLexerSEMICOLON   = 25
	ZenithLexerNL          = 26
	ZenithLexerIGNORED     = 27
)
