// Code generated from ZenithLexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ZenithLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var ZenithLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func zenithlexerLexerInit() {
	staticData := &ZenithLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'+'", "'-'", "'*'", "'/'", "'%'", "'if'", "'else'", "'true'", "'false'",
		"", "", "'('", "')'",
	}
	staticData.SymbolicNames = []string{
		"", "PLUS", "MINUS", "TIMES", "DIVIDE", "REM", "IF", "ELSE", "TRUE",
		"FALSE", "TYPE", "NUM", "LPAREN", "RPAREN", "NL", "SPACE",
	}
	staticData.RuleNames = []string{
		"PLUS", "MINUS", "TIMES", "DIVIDE", "REM", "IF", "ELSE", "TRUE", "FALSE",
		"TYPE", "NUM", "DEC_NUM", "DEC_SEG", "BIN_NUM", "BIN_SEG", "OCT_NUM",
		"OCT_SEG", "HEX_NUM", "HEX_SEG", "HEX_DIGIT", "LPAREN", "RPAREN", "NL",
		"SPACE",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 15, 306, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 1, 0, 1, 0, 1, 1, 1, 1, 1,
		2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1,
		6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1,
		8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 3, 9, 146, 8, 9, 1, 10, 1,
		10, 1, 10, 1, 10, 3, 10, 152, 8, 10, 1, 11, 1, 11, 5, 11, 156, 8, 11, 10,
		11, 12, 11, 159, 9, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 5, 11, 166,
		8, 11, 10, 11, 12, 11, 169, 9, 11, 3, 11, 171, 8, 11, 1, 12, 1, 12, 5,
		12, 175, 8, 12, 10, 12, 12, 12, 178, 9, 12, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 5, 13, 185, 8, 13, 10, 13, 12, 13, 188, 9, 13, 1, 13, 1, 13, 1,
		13, 1, 13, 1, 13, 5, 13, 195, 8, 13, 10, 13, 12, 13, 198, 9, 13, 3, 13,
		200, 8, 13, 1, 14, 5, 14, 203, 8, 14, 10, 14, 12, 14, 206, 9, 14, 1, 14,
		1, 14, 5, 14, 210, 8, 14, 10, 14, 12, 14, 213, 9, 14, 1, 15, 1, 15, 1,
		15, 1, 15, 1, 15, 5, 15, 220, 8, 15, 10, 15, 12, 15, 223, 9, 15, 1, 15,
		1, 15, 1, 15, 1, 15, 1, 15, 5, 15, 230, 8, 15, 10, 15, 12, 15, 233, 9,
		15, 3, 15, 235, 8, 15, 1, 16, 5, 16, 238, 8, 16, 10, 16, 12, 16, 241, 9,
		16, 1, 16, 1, 16, 5, 16, 245, 8, 16, 10, 16, 12, 16, 248, 9, 16, 1, 17,
		1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 5, 17, 256, 8, 17, 10, 17, 12, 17, 259,
		9, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 5, 17, 267, 8, 17, 10,
		17, 12, 17, 270, 9, 17, 3, 17, 272, 8, 17, 1, 18, 1, 18, 5, 18, 276, 8,
		18, 10, 18, 12, 18, 279, 9, 18, 1, 18, 1, 18, 1, 18, 5, 18, 284, 8, 18,
		10, 18, 12, 18, 287, 9, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1,
		22, 3, 22, 296, 8, 22, 1, 22, 4, 22, 299, 8, 22, 11, 22, 12, 22, 300, 1,
		23, 1, 23, 1, 23, 1, 23, 0, 0, 24, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6,
		13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 0, 25, 0, 27, 0, 29, 0, 31, 0,
		33, 0, 35, 0, 37, 0, 39, 0, 41, 12, 43, 13, 45, 14, 47, 15, 1, 0, 10, 2,
		0, 48, 57, 95, 95, 1, 0, 48, 57, 2, 0, 48, 49, 95, 95, 1, 0, 48, 49, 2,
		0, 48, 55, 95, 95, 1, 0, 48, 55, 3, 0, 48, 57, 65, 70, 97, 102, 1, 0, 13,
		13, 1, 0, 10, 10, 2, 0, 9, 9, 32, 32, 340, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0,
		0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0,
		0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1,
		0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45,
		1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 1, 49, 1, 0, 0, 0, 3, 51, 1, 0, 0, 0, 5,
		53, 1, 0, 0, 0, 7, 55, 1, 0, 0, 0, 9, 57, 1, 0, 0, 0, 11, 59, 1, 0, 0,
		0, 13, 62, 1, 0, 0, 0, 15, 67, 1, 0, 0, 0, 17, 72, 1, 0, 0, 0, 19, 145,
		1, 0, 0, 0, 21, 151, 1, 0, 0, 0, 23, 170, 1, 0, 0, 0, 25, 172, 1, 0, 0,
		0, 27, 179, 1, 0, 0, 0, 29, 204, 1, 0, 0, 0, 31, 214, 1, 0, 0, 0, 33, 239,
		1, 0, 0, 0, 35, 249, 1, 0, 0, 0, 37, 277, 1, 0, 0, 0, 39, 288, 1, 0, 0,
		0, 41, 290, 1, 0, 0, 0, 43, 292, 1, 0, 0, 0, 45, 298, 1, 0, 0, 0, 47, 302,
		1, 0, 0, 0, 49, 50, 5, 43, 0, 0, 50, 2, 1, 0, 0, 0, 51, 52, 5, 45, 0, 0,
		52, 4, 1, 0, 0, 0, 53, 54, 5, 42, 0, 0, 54, 6, 1, 0, 0, 0, 55, 56, 5, 47,
		0, 0, 56, 8, 1, 0, 0, 0, 57, 58, 5, 37, 0, 0, 58, 10, 1, 0, 0, 0, 59, 60,
		5, 105, 0, 0, 60, 61, 5, 102, 0, 0, 61, 12, 1, 0, 0, 0, 62, 63, 5, 101,
		0, 0, 63, 64, 5, 108, 0, 0, 64, 65, 5, 115, 0, 0, 65, 66, 5, 101, 0, 0,
		66, 14, 1, 0, 0, 0, 67, 68, 5, 116, 0, 0, 68, 69, 5, 114, 0, 0, 69, 70,
		5, 117, 0, 0, 70, 71, 5, 101, 0, 0, 71, 16, 1, 0, 0, 0, 72, 73, 5, 102,
		0, 0, 73, 74, 5, 97, 0, 0, 74, 75, 5, 108, 0, 0, 75, 76, 5, 115, 0, 0,
		76, 77, 5, 101, 0, 0, 77, 18, 1, 0, 0, 0, 78, 79, 5, 117, 0, 0, 79, 80,
		5, 105, 0, 0, 80, 81, 5, 110, 0, 0, 81, 82, 5, 116, 0, 0, 82, 146, 5, 56,
		0, 0, 83, 84, 5, 117, 0, 0, 84, 85, 5, 105, 0, 0, 85, 86, 5, 110, 0, 0,
		86, 87, 5, 116, 0, 0, 87, 88, 5, 49, 0, 0, 88, 146, 5, 54, 0, 0, 89, 90,
		5, 117, 0, 0, 90, 91, 5, 105, 0, 0, 91, 92, 5, 110, 0, 0, 92, 93, 5, 116,
		0, 0, 93, 94, 5, 51, 0, 0, 94, 146, 5, 50, 0, 0, 95, 96, 5, 117, 0, 0,
		96, 97, 5, 105, 0, 0, 97, 98, 5, 110, 0, 0, 98, 99, 5, 116, 0, 0, 99, 100,
		5, 54, 0, 0, 100, 146, 5, 52, 0, 0, 101, 102, 5, 117, 0, 0, 102, 103, 5,
		105, 0, 0, 103, 104, 5, 110, 0, 0, 104, 146, 5, 116, 0, 0, 105, 106, 5,
		105, 0, 0, 106, 107, 5, 110, 0, 0, 107, 108, 5, 116, 0, 0, 108, 146, 5,
		56, 0, 0, 109, 110, 5, 105, 0, 0, 110, 111, 5, 110, 0, 0, 111, 112, 5,
		116, 0, 0, 112, 113, 5, 49, 0, 0, 113, 146, 5, 54, 0, 0, 114, 115, 5, 105,
		0, 0, 115, 116, 5, 110, 0, 0, 116, 117, 5, 116, 0, 0, 117, 118, 5, 51,
		0, 0, 118, 146, 5, 50, 0, 0, 119, 120, 5, 105, 0, 0, 120, 121, 5, 110,
		0, 0, 121, 122, 5, 116, 0, 0, 122, 123, 5, 54, 0, 0, 123, 146, 5, 52, 0,
		0, 124, 125, 5, 105, 0, 0, 125, 126, 5, 110, 0, 0, 126, 146, 5, 116, 0,
		0, 127, 128, 5, 102, 0, 0, 128, 129, 5, 108, 0, 0, 129, 130, 5, 111, 0,
		0, 130, 131, 5, 97, 0, 0, 131, 132, 5, 116, 0, 0, 132, 133, 5, 51, 0, 0,
		133, 146, 5, 50, 0, 0, 134, 135, 5, 102, 0, 0, 135, 136, 5, 108, 0, 0,
		136, 137, 5, 111, 0, 0, 137, 138, 5, 97, 0, 0, 138, 139, 5, 116, 0, 0,
		139, 140, 5, 54, 0, 0, 140, 146, 5, 52, 0, 0, 141, 142, 5, 98, 0, 0, 142,
		143, 5, 111, 0, 0, 143, 144, 5, 111, 0, 0, 144, 146, 5, 108, 0, 0, 145,
		78, 1, 0, 0, 0, 145, 83, 1, 0, 0, 0, 145, 89, 1, 0, 0, 0, 145, 95, 1, 0,
		0, 0, 145, 101, 1, 0, 0, 0, 145, 105, 1, 0, 0, 0, 145, 109, 1, 0, 0, 0,
		145, 114, 1, 0, 0, 0, 145, 119, 1, 0, 0, 0, 145, 124, 1, 0, 0, 0, 145,
		127, 1, 0, 0, 0, 145, 134, 1, 0, 0, 0, 145, 141, 1, 0, 0, 0, 146, 20, 1,
		0, 0, 0, 147, 152, 3, 23, 11, 0, 148, 152, 3, 27, 13, 0, 149, 152, 3, 31,
		15, 0, 150, 152, 3, 35, 17, 0, 151, 147, 1, 0, 0, 0, 151, 148, 1, 0, 0,
		0, 151, 149, 1, 0, 0, 0, 151, 150, 1, 0, 0, 0, 152, 22, 1, 0, 0, 0, 153,
		171, 3, 25, 12, 0, 154, 156, 7, 0, 0, 0, 155, 154, 1, 0, 0, 0, 156, 159,
		1, 0, 0, 0, 157, 155, 1, 0, 0, 0, 157, 158, 1, 0, 0, 0, 158, 160, 1, 0,
		0, 0, 159, 157, 1, 0, 0, 0, 160, 161, 5, 46, 0, 0, 161, 171, 3, 25, 12,
		0, 162, 163, 3, 25, 12, 0, 163, 167, 5, 46, 0, 0, 164, 166, 7, 0, 0, 0,
		165, 164, 1, 0, 0, 0, 166, 169, 1, 0, 0, 0, 167, 165, 1, 0, 0, 0, 167,
		168, 1, 0, 0, 0, 168, 171, 1, 0, 0, 0, 169, 167, 1, 0, 0, 0, 170, 153,
		1, 0, 0, 0, 170, 157, 1, 0, 0, 0, 170, 162, 1, 0, 0, 0, 171, 24, 1, 0,
		0, 0, 172, 176, 7, 1, 0, 0, 173, 175, 7, 0, 0, 0, 174, 173, 1, 0, 0, 0,
		175, 178, 1, 0, 0, 0, 176, 174, 1, 0, 0, 0, 176, 177, 1, 0, 0, 0, 177,
		26, 1, 0, 0, 0, 178, 176, 1, 0, 0, 0, 179, 180, 5, 48, 0, 0, 180, 181,
		5, 98, 0, 0, 181, 199, 1, 0, 0, 0, 182, 200, 3, 29, 14, 0, 183, 185, 7,
		2, 0, 0, 184, 183, 1, 0, 0, 0, 185, 188, 1, 0, 0, 0, 186, 184, 1, 0, 0,
		0, 186, 187, 1, 0, 0, 0, 187, 189, 1, 0, 0, 0, 188, 186, 1, 0, 0, 0, 189,
		190, 5, 46, 0, 0, 190, 200, 3, 29, 14, 0, 191, 192, 3, 29, 14, 0, 192,
		196, 5, 46, 0, 0, 193, 195, 7, 2, 0, 0, 194, 193, 1, 0, 0, 0, 195, 198,
		1, 0, 0, 0, 196, 194, 1, 0, 0, 0, 196, 197, 1, 0, 0, 0, 197, 200, 1, 0,
		0, 0, 198, 196, 1, 0, 0, 0, 199, 182, 1, 0, 0, 0, 199, 186, 1, 0, 0, 0,
		199, 191, 1, 0, 0, 0, 200, 28, 1, 0, 0, 0, 201, 203, 7, 2, 0, 0, 202, 201,
		1, 0, 0, 0, 203, 206, 1, 0, 0, 0, 204, 202, 1, 0, 0, 0, 204, 205, 1, 0,
		0, 0, 205, 207, 1, 0, 0, 0, 206, 204, 1, 0, 0, 0, 207, 211, 7, 3, 0, 0,
		208, 210, 7, 2, 0, 0, 209, 208, 1, 0, 0, 0, 210, 213, 1, 0, 0, 0, 211,
		209, 1, 0, 0, 0, 211, 212, 1, 0, 0, 0, 212, 30, 1, 0, 0, 0, 213, 211, 1,
		0, 0, 0, 214, 215, 5, 48, 0, 0, 215, 216, 5, 111, 0, 0, 216, 234, 1, 0,
		0, 0, 217, 235, 3, 33, 16, 0, 218, 220, 7, 4, 0, 0, 219, 218, 1, 0, 0,
		0, 220, 223, 1, 0, 0, 0, 221, 219, 1, 0, 0, 0, 221, 222, 1, 0, 0, 0, 222,
		224, 1, 0, 0, 0, 223, 221, 1, 0, 0, 0, 224, 225, 5, 46, 0, 0, 225, 235,
		3, 33, 16, 0, 226, 227, 3, 33, 16, 0, 227, 231, 5, 46, 0, 0, 228, 230,
		7, 4, 0, 0, 229, 228, 1, 0, 0, 0, 230, 233, 1, 0, 0, 0, 231, 229, 1, 0,
		0, 0, 231, 232, 1, 0, 0, 0, 232, 235, 1, 0, 0, 0, 233, 231, 1, 0, 0, 0,
		234, 217, 1, 0, 0, 0, 234, 221, 1, 0, 0, 0, 234, 226, 1, 0, 0, 0, 235,
		32, 1, 0, 0, 0, 236, 238, 7, 4, 0, 0, 237, 236, 1, 0, 0, 0, 238, 241, 1,
		0, 0, 0, 239, 237, 1, 0, 0, 0, 239, 240, 1, 0, 0, 0, 240, 242, 1, 0, 0,
		0, 241, 239, 1, 0, 0, 0, 242, 246, 7, 5, 0, 0, 243, 245, 7, 4, 0, 0, 244,
		243, 1, 0, 0, 0, 245, 248, 1, 0, 0, 0, 246, 244, 1, 0, 0, 0, 246, 247,
		1, 0, 0, 0, 247, 34, 1, 0, 0, 0, 248, 246, 1, 0, 0, 0, 249, 250, 5, 48,
		0, 0, 250, 251, 5, 120, 0, 0, 251, 271, 1, 0, 0, 0, 252, 272, 3, 37, 18,
		0, 253, 256, 3, 39, 19, 0, 254, 256, 5, 95, 0, 0, 255, 253, 1, 0, 0, 0,
		255, 254, 1, 0, 0, 0, 256, 259, 1, 0, 0, 0, 257, 255, 1, 0, 0, 0, 257,
		258, 1, 0, 0, 0, 258, 260, 1, 0, 0, 0, 259, 257, 1, 0, 0, 0, 260, 261,
		5, 46, 0, 0, 261, 272, 3, 37, 18, 0, 262, 263, 3, 37, 18, 0, 263, 268,
		5, 46, 0, 0, 264, 267, 3, 39, 19, 0, 265, 267, 5, 95, 0, 0, 266, 264, 1,
		0, 0, 0, 266, 265, 1, 0, 0, 0, 267, 270, 1, 0, 0, 0, 268, 266, 1, 0, 0,
		0, 268, 269, 1, 0, 0, 0, 269, 272, 1, 0, 0, 0, 270, 268, 1, 0, 0, 0, 271,
		252, 1, 0, 0, 0, 271, 257, 1, 0, 0, 0, 271, 262, 1, 0, 0, 0, 272, 36, 1,
		0, 0, 0, 273, 276, 3, 39, 19, 0, 274, 276, 5, 95, 0, 0, 275, 273, 1, 0,
		0, 0, 275, 274, 1, 0, 0, 0, 276, 279, 1, 0, 0, 0, 277, 275, 1, 0, 0, 0,
		277, 278, 1, 0, 0, 0, 278, 280, 1, 0, 0, 0, 279, 277, 1, 0, 0, 0, 280,
		285, 3, 39, 19, 0, 281, 284, 3, 39, 19, 0, 282, 284, 5, 95, 0, 0, 283,
		281, 1, 0, 0, 0, 283, 282, 1, 0, 0, 0, 284, 287, 1, 0, 0, 0, 285, 283,
		1, 0, 0, 0, 285, 286, 1, 0, 0, 0, 286, 38, 1, 0, 0, 0, 287, 285, 1, 0,
		0, 0, 288, 289, 7, 6, 0, 0, 289, 40, 1, 0, 0, 0, 290, 291, 5, 40, 0, 0,
		291, 42, 1, 0, 0, 0, 292, 293, 5, 41, 0, 0, 293, 44, 1, 0, 0, 0, 294, 296,
		7, 7, 0, 0, 295, 294, 1, 0, 0, 0, 295, 296, 1, 0, 0, 0, 296, 297, 1, 0,
		0, 0, 297, 299, 7, 8, 0, 0, 298, 295, 1, 0, 0, 0, 299, 300, 1, 0, 0, 0,
		300, 298, 1, 0, 0, 0, 300, 301, 1, 0, 0, 0, 301, 46, 1, 0, 0, 0, 302, 303,
		7, 9, 0, 0, 303, 304, 1, 0, 0, 0, 304, 305, 6, 23, 0, 0, 305, 48, 1, 0,
		0, 0, 28, 0, 145, 151, 157, 167, 170, 176, 186, 196, 199, 204, 211, 221,
		231, 234, 239, 246, 255, 257, 266, 268, 271, 275, 277, 283, 285, 295, 300,
		1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ZenithLexerInit initializes any static state used to implement ZenithLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewZenithLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ZenithLexerInit() {
	staticData := &ZenithLexerLexerStaticData
	staticData.once.Do(zenithlexerLexerInit)
}

// NewZenithLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewZenithLexer(input antlr.CharStream) *ZenithLexer {
	ZenithLexerInit()
	l := new(ZenithLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &ZenithLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ZenithLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ZenithLexer tokens.
const (
	ZenithLexerPLUS   = 1
	ZenithLexerMINUS  = 2
	ZenithLexerTIMES  = 3
	ZenithLexerDIVIDE = 4
	ZenithLexerREM    = 5
	ZenithLexerIF     = 6
	ZenithLexerELSE   = 7
	ZenithLexerTRUE   = 8
	ZenithLexerFALSE  = 9
	ZenithLexerTYPE   = 10
	ZenithLexerNUM    = 11
	ZenithLexerLPAREN = 12
	ZenithLexerRPAREN = 13
	ZenithLexerNL     = 14
	ZenithLexerSPACE  = 15
)
